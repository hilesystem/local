{"version":3,"file":"local.cjs","sources":["../src/core/access/wrapper.js","../src/core/dir/dirIsExecutable.js","../src/core/dir/dirIsReadable.js","../src/core/dir/dirIsVisible.js","../src/core/dir/dirIsWritable.js","../src/core/file/fileIsExecutable.js","../src/core/file/fileIsReadable.js","../src/core/file/fileIsVisible.js","../src/core/file/fileIsWritable.js","../src/core/file/fileTruncate.js"],"sourcesContent":["const fs = require(\"fs\");\n\nconst { ofError } = require(\"@r37r0m0d3l/of\");\n\n/**\n * @name accessWrapper\n * @description Asynchronously tests a user's permissions for the file specified by path.\n * @since 0.0.1\n * @async\n * @param {number} mode\n * @param {string} path\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function accessWrapper(mode, path) {\n  const fsError = await ofError(fs.promises.access(path, mode));\n  if (!fsError) {\n    return true;\n  }\n  return fsError;\n};\n","const X_OK = require(\"fs\").constants.X_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name dirIsExecutable\n * @description Directory can be executed by the calling process\n * @since 0.0.5\n * @async\n * @param {string} pathToDir\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function dirIsExecutable(pathToDir) {\n  return accessWrapper(X_OK, pathToDir);\n};\n","const R_OK = require(\"fs\").constants.R_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name dirIsReadable\n * @description Directory is visible to the calling process\n * @since 0.0.1\n * @async\n * @param {string} pathToDir\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function dirIsReadable(pathToDir) {\n  return accessWrapper(R_OK, pathToDir);\n};\n","const F_OK = require(\"fs\").constants.F_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name dirIsVisible\n * @description Directory is visible to the calling process\n * @since 0.0.5\n * @async\n * @param {string} pathToDir\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function dirIsVisible(pathToDir) {\n  return accessWrapper(F_OK, pathToDir);\n};\n","const W_OK = require(\"fs\").constants.W_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name dirIsWritable\n * @description Directory can be written by the calling process\n * @since 0.0.1\n * @async\n * @param {string} pathToDir\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function dirIsWritable(pathToDir) {\n  return accessWrapper(W_OK, pathToDir);\n};\n","const X_OK = require(\"fs\").constants.X_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name fileIsExecutable\n * @description File can be executed by the calling process\n * @since 0.0.5\n * @async\n * @param {string|Buffer|URL} pathToFile\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function fileIsExecutable(pathToFile) {\n  return accessWrapper(X_OK, pathToFile);\n};\n","const R_OK = require(\"fs\").constants.R_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name fileIsReadable\n * @description File is visible to the calling process\n * @since 0.0.1\n * @async\n * @param {string|Buffer|URL} pathToFile\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function fileIsReadable(pathToFile) {\n  return accessWrapper(R_OK, pathToFile);\n};\n","const F_OK = require(\"fs\").constants.F_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name fileIsVisible\n * @description File is visible to the calling process\n * @since 0.0.5\n * @async\n * @param {string|Buffer|URL} pathToFile\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function fileIsVisible(pathToFile) {\n  return accessWrapper(F_OK, pathToFile);\n};\n","const W_OK = require(\"fs\").constants.W_OK;\n\nconst accessWrapper = require(\"../access/wrapper.js\");\n\n/**\n * @name fileIsWritable\n * @description File can be written by the calling process\n * @since 0.0.1\n * @async\n * @param {string|Buffer|URL} pathToFile\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function fileIsWritable(pathToFile) {\n  return accessWrapper(W_OK, pathToFile);\n};\n","const fs = require(\"fs\");\n\nconst { ofError } = require(\"@r37r0m0d3l/of\");\n\n/**\n * @name fileTruncate\n * @description Truncate a file to a specified length\n * @since 0.0.6\n * @async\n * @param {string|Buffer|URL} pathToFile\n * @param {number=0} length\n * @returns {Promise<boolean|Error|{readonly name: string, readonly message: string, readonly stack?: string}>}\n */\nmodule.exports = async function fileTruncate(pathToFile, length = 0) {\n  const fsError = await ofError(fs.promises.truncate(pathToFile, length));\n  if (!fsError) {\n    return true;\n  }\n  return fsError;\n};\n"],"names":["ofError","require","module","async","accessWrapper","mode","path","fsError","fs","promises","access","X_OK","constants","R_OK","F_OK","W_OK","dirIsExecutable","pathToDir","dirIsReadable","dirIsVisible","dirIsWritable","fileIsExecutable","pathToFile","fileIsReadable","fileIsVisible","fileIsWritable","fileTruncate","length","truncate"],"mappings":"0OAEA,MAAMA,QAAEA,GAAYC,EAWpBC,MAAiBC,eAAeC,cAAcC,EAAMC,SAC5CC,QAAgBP,EAAQQ,EAAGC,SAASC,OAAOJ,EAAMD,WAClDE,IACI,GChBX,MAAMI,EAAOV,EAAcW,UAAUD,KCArC,MAAME,EAAOZ,EAAcW,UAAUC,KCArC,MAAMC,EAAOb,EAAcW,UAAUE,KCArC,MAAMC,EAAOd,EAAcW,UAAUG,KCArC,MAAMJ,EAAOV,EAAcW,UAAUD,KCArC,MAAME,EAAOZ,EAAcW,UAAUC,KCArC,MAAMC,EAAOb,EAAcW,UAAUE,KCArC,MAAMC,EAAOd,EAAcW,UAAUG,KCErC,cAAQf,GAAYC,EAWpBC,MRDiBC,eAAea,gBAAgBC,UACvCb,EAAcO,EAAMM,MCDZd,eAAee,cAAcD,UACrCb,EAAcS,EAAMI,MCDZd,eAAegB,aAAaF,UACpCb,EAAcU,EAAMG,MCDZd,eAAeiB,cAAcH,UACrCb,EAAcW,EAAME,MCDZd,eAAekB,iBAAiBC,UACxClB,EAAcO,EAAMW,MCDZnB,eAAeoB,eAAeD,UACtClB,EAAcS,EAAMS,MCDZnB,eAAeqB,cAAcF,UACrClB,EAAcU,EAAMQ,MCDZnB,eAAesB,eAAeH,UACtClB,EAAcW,EAAMO,MCAZnB,eAAeuB,aAAaJ,EAAYK,EAAS,SAC1DpB,QAAgBP,EAAQQ,EAAGC,SAASmB,SAASN,EAAYK,WAC1DpB,IACI"}