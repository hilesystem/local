import s from"fs";import e from"@r37r0m0d3l/of";const{ofError:n}=e;var t=async function accessWrapper(e,t){const a=await n(s.promises.access(t,e));return a||!0};const a=s.constants.X_OK;const r=s.constants.R_OK;const i=s.constants.F_OK;const c=s.constants.W_OK;const o=s.constants.X_OK;const l=s.constants.R_OK;const f=s.constants.F_OK;const u=s.constants.W_OK;const{ofError:b}=e;var I=async function dirIsExecutable(s){return t(a,s)},d=async function dirIsReadable(s){return t(r,s)},y=async function dirIsVisible(s){return t(i,s)},W=async function dirIsWritable(s){return t(c,s)},p=async function fileIsExecutable(s){return t(o,s)},x=async function fileIsReadable(s){return t(l,s)},E=async function fileIsVisible(s){return t(f,s)},K=async function fileIsWritable(s){return t(u,s)},O=async function fileTruncate(e,n=0){const t=await b(s.promises.truncate(e,n));return t||!0},R={dirIsExecutable:I,dirIsReadable:d,dirIsVisible:y,dirIsWritable:W,fileIsExecutable:p,fileIsReadable:x,fileIsVisible:E,fileIsWritable:K,fileTruncate:O};export default R;export{I as dirIsExecutable,d as dirIsReadable,y as dirIsVisible,W as dirIsWritable,p as fileIsExecutable,x as fileIsReadable,E as fileIsVisible,K as fileIsWritable,O as fileTruncate};
//# sourceMappingURL=local.mjs.map
