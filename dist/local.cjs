"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs"),t=require("@r37r0m0d3l/of"),i=function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}(require("path"));function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}async function createDirectory(i,r="0777",s=!0){const a=await t.ofError(e.promises.mkdir(i,{mode:r,recursive:s}));return a||!0}async function getStatus(i){return t.of(e.promises.stat(i))}async function writeFile(i,r,s){const a=await t.ofError(e.promises.writeFile(i,r,s));return a||!0}async function createFile(r,s="0777"){const[a,n]=await getStatus(r);if(!n&&a.isFile())return!0;const c=i.dirname(r);if(n&&"ENOENT"===n.code){const e=await createDirectory(c,s);if(!0!==e)return e;const t=await writeFile(r,"",{mode:s,flag:"w"});return!0===t||t}return a.isDirectory()?await writeFile(r,"",{mode:s,flag:"w"}):await t.ofError(e.promises.readdir(c))}async function accessWrapper(i,r){const s=await t.ofError(e.promises.access(r,i));return s||!0}async function dirIsExecutable(t){return accessWrapper(e.constants.X_OK,t)}async function dirIsReadable(t){return accessWrapper(e.constants.R_OK,t)}async function dirIsVisible(t){return accessWrapper(e.constants.F_OK,t)}async function dirIsWritable(t){return accessWrapper(e.constants.W_OK,t)}async function fileIsExecutable(t){return accessWrapper(e.constants.X_OK,t)}async function fileIsReadable(t){return accessWrapper(e.constants.R_OK,t)}async function fileIsVisible(t){return accessWrapper(e.constants.F_OK,t)}async function fileIsWritable(t){return accessWrapper(e.constants.W_OK,t)}async function fileTruncate(i,r=0){const s=await t.ofError(e.promises.truncate(i,r));return s||!0}async function isDirExists(e){const[t,i]=await getStatus(e);return!i&&t.isDirectory()}async function isFileExists(e){const[t,i]=await getStatus(e);return!i&&t.isFile()}async function isPathExists(e){const[t]=await getStatus(e);return Boolean(t)}exports.HileSystemLocal=class HileSystemLocal{constructor(){_defineProperty(this,"createDirectory",createDirectory),_defineProperty(this,"createFile",createFile),_defineProperty(this,"dirIsExecutable",dirIsExecutable),_defineProperty(this,"dirIsReadable",dirIsReadable),_defineProperty(this,"dirIsVisible",dirIsVisible),_defineProperty(this,"dirIsWritable",dirIsWritable),_defineProperty(this,"getStatus",getStatus),_defineProperty(this,"isDirExists",isDirExists),_defineProperty(this,"isFileExists",isFileExists),_defineProperty(this,"isPathExists",isPathExists),_defineProperty(this,"fileIsExecutable",fileIsExecutable),_defineProperty(this,"fileIsReadable",fileIsReadable),_defineProperty(this,"fileIsVisible",fileIsVisible),_defineProperty(this,"fileIsWritable",fileIsWritable),_defineProperty(this,"fileTruncate",fileTruncate),_defineProperty(this,"writeFile",writeFile)}},exports.createDirectory=createDirectory,exports.createFile=createFile,exports.dirIsExecutable=dirIsExecutable,exports.dirIsReadable=dirIsReadable,exports.dirIsVisible=dirIsVisible,exports.dirIsWritable=dirIsWritable,exports.fileIsExecutable=fileIsExecutable,exports.fileIsReadable=fileIsReadable,exports.fileIsVisible=fileIsVisible,exports.fileIsWritable=fileIsWritable,exports.fileTruncate=fileTruncate,exports.getStatus=getStatus,exports.isDirExists=isDirExists,exports.isFileExists=isFileExists,exports.isPathExists=isPathExists,exports.writeFile=writeFile;
//# sourceMappingURL=local.cjs.map
